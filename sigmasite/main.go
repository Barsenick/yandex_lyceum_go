package main

import (
	"fmt"
	"net/http"
	"strings"
)

func NameHandler(w http.ResponseWriter, r *http.Request) {
	query := r.URL.Query()
	name := query.Get("name")
	lower := strings.ToLower(name)
	switch lower {
	case "":
		fmt.Fprint(w, `–Ø –Ω–µ –∑–Ω–∞—é –∫—Ç–æ —Ç—ã. –î–æ–±–∞–≤—å –≤ –∫–æ–Ω—Ü–µ URL "?name=*—Ç–≤–æ—ë –∏–º—è*". –ï—Å–ª–∏ —è —Ç–µ–±—è –∑–Ω–∞—é —Ç—ã —É–≤–∏–¥–∏—à—å —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.`)
	case "–Ω–∏–∫–æ–ª–∞–π":
		fmt.Fprint(w, `–∞–±–∞—é–Ω–¥–∞ü•µ`)
	case "–∫–æ–ª—è":
		fmt.Fprint(w, `–∞–±–∞—é–Ω–¥–∞ü•µ`)
	case "—Å–µ—Ä–≥–µ–π":
		fmt.Fprint(w, `–≥–æ –≤ —Ä–æ–∫–µ—Ç?`)
	case "sigma":
		fmt.Fprint(w, `–õ–∞–¥–Ω–æ. –í –∫–æ–Ω—Ü–µ URL –ø–µ—Ä–µ–¥ "?name=" –¥–æ–±–∞–≤—å "/secret/sigma".`)
	case "julianiyaggnew":
		fmt.Fprint(w, `Sigma Rizz on Kondicii`)
	default:
		fmt.Fprint(w, `–ª–∏–±–æ —è —Ç–µ–±—è –Ω–µ –∑–Ω–∞—é –ª–∏–±–æ –±—ã–ª–æ –ª–µ–Ω—å –¥–æ–±–∞–≤–ª—è—Ç—å –ª–æ–ª`)
	}
}

func SigmaHandler(w http.ResponseWriter, r *http.Request) {
	fmt.Fprint(w, `—ç—Ç–æ—Ç —Ç–∏–ø –¥—É–º–∞–ª —á—Ç–æ —Ç—É—Ç –±—É–¥–µ—Ç —Å–µ–∫—Ä–µ—Ç–∫–∞`)
}

func main() {
	http.HandleFunc("/", NameHandler)
	http.HandleFunc("/secret/sigma", SigmaHandler)
	http.ListenAndServe(":8080", nil)
}
